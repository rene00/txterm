// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: account_type.sql

package query

import (
	"context"
)

const createAccountType = `-- name: CreateAccountType :one
INSERT INTO account_type (id, name) VALUES (NULL, ?) RETURNING id, name
`

func (q *Queries) CreateAccountType(ctx context.Context, name string) (AccountType, error) {
	row := q.db.QueryRowContext(ctx, createAccountType, name)
	var i AccountType
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getAccountType = `-- name: GetAccountType :one
SELECT id, name FROM account_type WHERE name = ?
`

func (q *Queries) GetAccountType(ctx context.Context, name string) (AccountType, error) {
	row := q.db.QueryRowContext(ctx, getAccountType, name)
	var i AccountType
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
