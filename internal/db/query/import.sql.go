// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: import.sql

package query

import (
	"context"
	"database/sql"
	"time"
)

const createImport = `-- name: CreateImport :one
INSERT INTO import (id, date_created, filename, balance_amount_num, balance_amount_den, date_as_of) VALUES (null, ?, ?, ?, ?, ?)
RETURNING id, date_created, filename, balance_amount_num, balance_amount_den, date_as_of
`

type CreateImportParams struct {
	DateCreated      time.Time     `json:"date_created"`
	Filename         string        `json:"filename"`
	BalanceAmountNum sql.NullInt64 `json:"balance_amount_num"`
	BalanceAmountDen sql.NullInt64 `json:"balance_amount_den"`
	DateAsOf         sql.NullTime  `json:"date_as_of"`
}

func (q *Queries) CreateImport(ctx context.Context, arg CreateImportParams) (Import, error) {
	row := q.queryRow(ctx, q.createImportStmt, createImport,
		arg.DateCreated,
		arg.Filename,
		arg.BalanceAmountNum,
		arg.BalanceAmountDen,
		arg.DateAsOf,
	)
	var i Import
	err := row.Scan(
		&i.ID,
		&i.DateCreated,
		&i.Filename,
		&i.BalanceAmountNum,
		&i.BalanceAmountDen,
		&i.DateAsOf,
	)
	return i, err
}
